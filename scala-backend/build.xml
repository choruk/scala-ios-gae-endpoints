<project>
    <property name="sdk.dir" location="../appengine-java-sdk" />
    <property environment="env" />
    
    <import file="${sdk.dir}/config/user/ant-macros.xml" />
    
    <property name="src.dir" value="src" />
    <property name="build.dir" value="war/WEB-INF/classes" />
    <property name="lib.dir" value="war/WEB-INF/lib" />
    <property name="scala.home" value="${env.SCALA_HOME}" />
	<property name="objectify.home" value="${env.OBJECTIFY_HOME}" />
    <property name="scala-library.jar" value="${scala.home}/lib/scala-library.jar" />
    <property name="scala-compiler.jar" value="${scala.home}/lib/scala-compiler.jar" />
    <property name="scala-reflect.jar" value="${scala.home}/lib/scala-reflect.jar" />
    
    <target name="init">
        <path id="build.classpath">
            <pathelement location="${scala-library.jar}" />
            <pathelement location="${build.dir}" />
        </path>
        
        <taskdef resource="scala/tools/ant/antlib.xml">
            <classpath>
                <pathelement location="${scala-compiler.jar}" />
                <pathelement location="${scala-library.jar}" />
                <pathelement location="${scala-reflect.jar}" />
            </classpath>
        </taskdef>
    </target>
    
    <target name="clean" description="Deletes all output classes">
        <delete dir="${build.dir}"/>
    </target>
    
    <path id="project.classpath">
        <pathelement path="${build.dir}" />
        
        <fileset dir="${lib.dir}">
            <include name="**/*.jar" />
        </fileset>
        
        <fileset dir="${sdk.dir}/lib">
            <include name="shared/**/*.jar" />
        </fileset>
    </path>
    
    <target name="copyjars" description="Copies the App Engine JARs, Scala Lib JARs and Objectify JARs to the WAR.">
        <copy todir="${lib.dir}" flatten="true">
            <fileset dir="${sdk.dir}/lib/user">
                <include name="**/*.jar" />
            </fileset>
            <fileset dir="${sdk.dir}/lib/opt">
                <include name="**/*.jar" />
            </fileset>
            <fileset dir="${scala.home}/lib">
                <include name="**/*.jar" />
            </fileset>
						<fileset dir="${objectify.home}">
							<include name="*.jar" />
						</fileset>
        </copy>
    </target>
    
    <target name="compileJ" depends="copyjars, init" description="Compiles Scala source and copies other source files to the WAR.">
      <mkdir dir="${build.dir}" />
      
      <copy todir="${build.dir}">
          <fileset dir="${src.dir}">
              <exclude name="**/*.scala" />
							<exclude name="**/*.java" />
          </fileset>
      </copy>
			
			<javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="project.classpath" debug="on" />
    </target>
		
    <target name="compile" depends="copyjars, init" description="Compiles Scala source and copies other source files to the WAR.">
        <mkdir dir="${build.dir}" />
        
        <copy todir="${build.dir}">
            <fileset dir="${src.dir}">
                <exclude name="**/*.scala" />
								<exclude name="**/*.java" />
            </fileset>
        </copy>


        <scalac srcdir="${src.dir}" destdir="${build.dir}" classpathref="project.classpath">
					<include name="**/*.scala" />
					<!--include name="**/*.java" /-->
				</scalac>
    </target>
    
    <target name="runserver" depends="compile" description="Starts the development server.">
        <dev_appserver war="war" port="8888" />
    </target>
    
    <target name="update" depends="compile" description="Uploads the application to App Engine.">
        <appcfg action="update" war="war" />
    </target>
    
    <target name="update_indexes" depends="compile" description="Uploads just the datastore index configuration to App Engine.">
        <appcfg action="update_indexes" war="war" />
    </target>
    
    <target name="rollback" depends="compile" description="Rolls back an interrupted application update.">
        <appcfg action="rollback" war="war" />
    </target>
    
    <target name="request_logs" description="Downloads log data from App Engine for the application.">
        <appcfg action="request_logs" war="war">
            <options>
                <arg value="--num_days=1"/>
            </options>
            <args>
                <arg value="logs.txt"/>
            </args>
        </appcfg>
    </target>
    
</project>